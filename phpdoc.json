{
    "admin\/capabilities\/class-abstract-capability-manager.php": {
        "{$capability}_roles": {
            "start": 80,
            "doc": {
                "description": "Filter: Allow changing roles that a capability is added to.",
                "long_description": "",
                "tags": [
                    {
                        "name": "api",
                        "content": "array $roles The default roles to be filtered."
                    }
                ]
            }
        }
    },
    "admin\/capabilities\/class-capability-manager-integration.php": {
        "wpseo_register_capabilities": {
            "start": 54,
            "doc": {
                "description": "",
                "long_description": "",
                "tags": []
            }
        }
    },
    "admin\/class-admin-editor-specific-replace-vars.php": {
        "wpseo_editor_specific_replace_vars": {
            "start": 64,
            "doc": {
                "description": "Filter: Adds the possibility to add extra editor specific replacement variables.",
                "long_description": "",
                "tags": [
                    {
                        "name": "api",
                        "content": "array $replacement_variables Empty array to add the editor specific replace vars to."
                    }
                ]
            }
        }
    },
    "admin\/class-admin-init.php": {
        "wpseo_update_notice_content": {
            "start": 159,
            "doc": {
                "description": "Filter: 'wpseo_update_notice_content' - Allow filtering of the content of the update notice read from the release-info.json file.",
                "long_description": "",
                "tags": [
                    {
                        "name": "api",
                        "content": "object The object from the release-info.json file."
                    }
                ]
            }
        },
        "wpseo_always_register_metaboxes_on_admin": {
            "start": 291,
            "doc": {
                "description": "Filter: 'wpseo_always_register_metaboxes_on_admin' - Allow developers to change whether the WPSEO metaboxes are only registered on the typical pages (lean loading) or always registered when in admin.",
                "long_description": "",
                "tags": [
                    {
                        "name": "api",
                        "content": "bool Whether to always register the metaboxes or not. Defaults to false."
                    }
                ]
            }
        }
    },
    "admin\/class-admin-recommended-replace-vars.php": {
        "wpseo_recommended_replace_vars": {
            "start": 154,
            "doc": {
                "description": "Filter: Adds the possibility to add extra recommended replacement variables.",
                "long_description": "",
                "tags": [
                    {
                        "name": "api",
                        "content": "array $additional_replace_vars Empty array to add the replacevars to."
                    }
                ]
            }
        }
    },
    "admin\/class-admin.php": {
        "wpseo_manage_options_capability": {
            "start": 165,
            "doc": {
                "description": "Filter: 'wpseo_manage_options_capability' - Allow changing the capability users need to view the settings pages.",
                "long_description": "",
                "tags": [
                    {
                        "name": "api",
                        "content": "string unsigned The capability."
                    }
                ]
            }
        },
        "wpseo_helpscout_beacon_settings": {
            "start": 400,
            "doc": {
                "description": "Filter: 'wpseo_helpscout_beacon_settings' - Allows overriding the HelpScout beacon settings.",
                "long_description": "",
                "tags": [
                    {
                        "name": "api",
                        "content": "string - The helpscout beacons settings."
                    }
                ]
            }
        }
    },
    "admin\/class-extension-manager.php": {
        "yoast-active-extensions": {
            "start": 120,
            "doc": {
                "description": "",
                "long_description": "",
                "tags": []
            }
        }
    },
    "admin\/class-license-page-manager.php": {
        "yoast-active-extensions": {
            "start": 48,
            "doc": {
                "description": "Filter: 'yoast-active-extensions' - Collects all active extensions. This hook is implemented in the                                     license manager.",
                "long_description": "",
                "tags": [
                    {
                        "name": "api",
                        "content": "array $extensions The array with extensions."
                    }
                ]
            }
        }
    },
    "admin\/class-meta-columns.php": {
        "wpseo_use_page_analysis": {
            "start": 49,
            "doc": {
                "description": "",
                "long_description": "",
                "tags": []
            }
        }
    },
    "admin\/class-option-tabs-formatter.php": {
        "wpseo_option_tab-{$tab_filter_name}": {
            "start": 61,
            "doc": {
                "description": "Allows to override the content that is display on the specific option tab.",
                "long_description": "",
                "tags": [
                    {
                        "name": "internal",
                        "content": "For internal Yoast SEO use only."
                    },
                    {
                        "name": "api",
                        "content": "string|null The content that should be displayed for this tab. Leave empty for default behaviour."
                    },
                    {
                        "name": "param",
                        "content": "The registered option tabs.",
                        "types": [
                            "\\WPSEO_Option_Tabs"
                        ],
                        "variable": "$option_tabs"
                    },
                    {
                        "name": "param",
                        "content": "The tab that is being displayed.",
                        "types": [
                            "\\WPSEO_Option_Tab"
                        ],
                        "variable": "$tab"
                    }
                ]
            }
        }
    },
    "admin\/class-primary-term-admin.php": {
        "wpseo_primary_term_taxonomies": {
            "start": 235,
            "doc": {
                "description": "Filters which taxonomies for which the user can choose the primary term.",
                "long_description": "",
                "tags": [
                    {
                        "name": "api",
                        "content": "array    $taxonomies An array of taxonomy objects that are primary_term enabled."
                    },
                    {
                        "name": "param",
                        "content": "The post type for which to filter the taxonomies.",
                        "types": [
                            "string"
                        ],
                        "variable": "$post_type"
                    },
                    {
                        "name": "param",
                        "content": "All taxonomies for this post types, even ones that don't have primary term                               enabled.",
                        "types": [
                            "array"
                        ],
                        "variable": "$all_taxonomies"
                    }
                ]
            }
        }
    },
    "admin\/class-yoast-form.php": {
        "wpseo_admin_footer": {
            "start": 155,
            "doc": {
                "description": "Apply general admin_footer hooks.",
                "long_description": "",
                "tags": []
            }
        },
        "wpseo_admin_promo_footer": {
            "start": 160,
            "doc": {
                "description": "Run possibly set actions to add for example an i18n box.",
                "long_description": "",
                "tags": []
            }
        },
        "wpseo_admin_below_content": {
            "start": 171,
            "doc": {
                "description": "",
                "long_description": "",
                "tags": []
            }
        }
    },
    "admin\/class-yoast-notification-center.php": {
        "yoast_notifications_before_storage": {
            "start": 591,
            "doc": {
                "description": "Filter: 'yoast_notifications_before_storage' - Allows developer to filter notifications before saving them.",
                "long_description": "",
                "tags": [
                    {
                        "name": "api",
                        "content": "Yoast_Notification[] $notifications"
                    }
                ]
            }
        }
    },
    "admin\/class-yoast-notification.php": {
        "wpseo_notification_capabilities": {
            "start": 237,
            "doc": {
                "description": "Filter capabilities that enable the displaying of this notification.",
                "long_description": "",
                "tags": [
                    {
                        "name": "param",
                        "content": "The capabilities that must be present for this notification.",
                        "types": [
                            "array"
                        ],
                        "variable": "$capabilities"
                    },
                    {
                        "name": "param",
                        "content": "The notification object.",
                        "types": [
                            "\\Yoast_Notification"
                        ],
                        "variable": "$notification"
                    },
                    {
                        "name": "return",
                        "content": "Array of capabilities or empty for no restrictions.",
                        "types": [
                            "array"
                        ]
                    },
                    {
                        "name": "since",
                        "content": "3.2"
                    }
                ]
            }
        },
        "wpseo_notification_capability_check": {
            "start": 254,
            "doc": {
                "description": "Filter capability check to enable all or any capabilities.",
                "long_description": "",
                "tags": [
                    {
                        "name": "param",
                        "content": "The type of check that will be used to determine if an capability is present.",
                        "types": [
                            "string"
                        ],
                        "variable": "$capability_check"
                    },
                    {
                        "name": "param",
                        "content": "The notification object.",
                        "types": [
                            "\\Yoast_Notification"
                        ],
                        "variable": "$notification"
                    },
                    {
                        "name": "return",
                        "content": "self::MATCH_ALL or self::MATCH_ANY.",
                        "types": [
                            "string"
                        ]
                    },
                    {
                        "name": "since",
                        "content": "3.2"
                    }
                ]
            }
        }
    },
    "admin\/config-ui\/class-configuration-page.php": {
        "wpseo_configuration_wizard_head": {
            "start": 133,
            "doc": {
                "description": "Is called before the closing <\/head> tag in the Yoast Configuration wizard.",
                "long_description": "<p>Allows users to add their own scripts or styles.<\/p>",
                "tags": [
                    {
                        "name": "since",
                        "content": "4.0"
                    }
                ]
            }
        },
        "wpseo_configuration_wizard_footer": {
            "start": 157,
            "doc": {
                "description": "Is called before the closing <\/body> tag in the Yoast Configuration wizard.",
                "long_description": "<p>Allows users to add their own scripts.<\/p>",
                "tags": [
                    {
                        "name": "since",
                        "content": "4.0"
                    }
                ]
            }
        }
    },
    "admin\/filters\/class-cornerstone-filter.php": {
        "wpseo_cornerstone_post_types": {
            "start": 144,
            "doc": {
                "description": "Filter: 'wpseo_cornerstone_post_types' - Filters post types to exclude the cornerstone feature for.",
                "long_description": "",
                "tags": [
                    {
                        "name": "api",
                        "content": "array - The accessible post types to filter."
                    }
                ]
            }
        }
    },
    "admin\/formatter\/class-metabox-formatter.php": {
        "wpseo_enable_assessment_markers": {
            "start": 105,
            "doc": {
                "description": "Filter to determine if the markers should be enabled or not.",
                "long_description": "",
                "tags": [
                    {
                        "name": "param",
                        "content": "Should the markers being enabled. Default = true.",
                        "types": [
                            "bool"
                        ],
                        "variable": "$showMarkers"
                    }
                ]
            }
        },
        "wpseo_is_markdown_enabled": {
            "start": 289,
            "doc": {
                "description": "Filters whether markdown support is active in the readability- and seo-analysis.",
                "long_description": "",
                "tags": [
                    {
                        "name": "since",
                        "content": "11.3"
                    },
                    {
                        "name": "param",
                        "content": "Is markdown support for Yoast SEO active.",
                        "types": [
                            "array"
                        ],
                        "variable": "$is_markdown"
                    }
                ]
            }
        }
    },
    "admin\/menu\/class-admin-menu.php": {
        "wpseo_submenu_pages": {
            "start": 102,
            "doc": {
                "description": "Filter: 'wpseo_submenu_pages' - Collects all submenus that need to be shown.",
                "long_description": "",
                "tags": [
                    {
                        "name": "api",
                        "content": "array $submenu_pages List with all submenu pages."
                    }
                ]
            }
        }
    },
    "admin\/metabox\/class-metabox.php": {
        "wpseo_metabox_prio": {
            "start": 237,
            "doc": {
                "description": "",
                "long_description": "",
                "tags": []
            }
        },
        "wpseo_tab_translate": {
            "start": 195,
            "doc": {
                "description": "",
                "long_description": "",
                "tags": []
            }
        },
        "wpseo_cornerstone_post_types": {
            "start": 276,
            "doc": {
                "description": "This filter is documented in admin\/filters\/class-cornerstone-filter.php.",
                "long_description": "",
                "tags": []
            }
        },
        "wpseo_content_meta_section_content": {
            "start": 346,
            "doc": {
                "description": "Filter: 'wpseo_content_meta_section_content' - Allow filtering the metabox content before outputting.",
                "long_description": "",
                "tags": [
                    {
                        "name": "api",
                        "content": "string $post_content The metabox content string."
                    }
                ]
            }
        },
        "yoast_free_additional_metabox_sections": {
            "start": 453,
            "doc": {
                "description": "Private filter: 'yoast_free_additional_metabox_sections'.",
                "long_description": "<p>Meant for internal use only. Allows adding additional tabs to the Yoast SEO metabox.<\/p>",
                "tags": [
                    {
                        "name": "since",
                        "content": "11.9"
                    },
                    {
                        "name": "param",
                        "content": "{     An array of arrays with tab specifications.     @type array $tab {          A tab specification.          @type string $name         The name of the tab. Used in the HTML IDs, href and aria properties.          @type string $link_content The content of the tab link.          @type string $content      The content of the tab.          @type array $options {              Optional. Extra options.              @type string $link_class      Optional. The class for the tab link.              @type string $link_aria_label Optional. The aria label of the tab link.          }     } }",
                        "types": [
                            "array[]"
                        ],
                        "variable": "$tabs"
                    }
                ]
            }
        },
        "wpseo_do_meta_box_field_{$key}": {
            "start": 629,
            "doc": {
                "description": "",
                "long_description": "",
                "tags": []
            }
        },
        "wpseo_save_compare_data": {
            "start": 713,
            "doc": {
                "description": "Determine we're not accidentally updating a different post.",
                "long_description": "<p>We can't use filter_input here as the ID isn't available at this point, other than in the $_POST data.<\/p>",
                "tags": []
            }
        },
        "wpseo_save_metaboxes": {
            "start": 720,
            "doc": {
                "description": "",
                "long_description": "",
                "tags": []
            }
        },
        "wpseo_saved_postdata": {
            "start": 768,
            "doc": {
                "description": "",
                "long_description": "",
                "tags": []
            }
        },
        "wpseo_always_register_metaboxes_on_admin": {
            "start": 810,
            "doc": {
                "description": "",
                "long_description": "",
                "tags": []
            }
        }
    },
    "admin\/pages\/dashboard.php": {
        "wpseo_all_admin_notices": {
            "start": 33,
            "doc": {
                "description": "",
                "long_description": "",
                "tags": []
            }
        },
        "wpseo_settings_tabs_dashboard": {
            "start": 64,
            "doc": {
                "description": "",
                "long_description": "",
                "tags": []
            }
        },
        "wpseo_dashboard": {
            "start": 68,
            "doc": {
                "description": "",
                "long_description": "",
                "tags": []
            }
        }
    },
    "admin\/pages\/tools.php": {
        "wpseo_tools_overview_list_items": {
            "start": 65,
            "doc": {
                "description": "Action: 'wpseo_tools_overview_list_items' - Hook to add additional tools to the overview.",
                "long_description": "",
                "tags": []
            }
        }
    },
    "admin\/taxonomy\/class-taxonomy-fields.php": {
        "wpseo_taxonomy_content_fields": {
            "start": 96,
            "doc": {
                "description": "Filter: 'wpseo_taxonomy_content_fields' - Adds the possibility to register additional content fields.",
                "long_description": "",
                "tags": [
                    {
                        "name": "api",
                        "content": "array - The additional fields."
                    }
                ]
            }
        }
    },
    "admin\/tracking\/class-tracking-settings-data.php": {
        "wpseo_tracking_settings_include_list": {
            "start": 179,
            "doc": {
                "description": "Filter: 'wpseo_tracking_settings_include_list' - Allow filtering the settings included in tracking.",
                "long_description": "",
                "tags": [
                    {
                        "name": "api",
                        "content": "string $include_list the list with included setting names."
                    }
                ]
            }
        }
    },
    "admin\/tracking\/class-tracking.php": {
        "wpseo_enable_tracking": {
            "start": 215,
            "doc": {
                "description": "Filter: 'wpseo_enable_tracking' - Enables the data tracking of Yoast SEO Premium and add-ons.",
                "long_description": "",
                "tags": [
                    {
                        "name": "api",
                        "content": "string $is_enabled The enabled state. Default is false."
                    }
                ]
            }
        }
    },
    "admin\/views\/class-yoast-feature-toggles.php": {
        "wpseo_feature_toggles": {
            "start": 172,
            "doc": {
                "description": "Filter to add feature toggles from add-ons.",
                "long_description": "",
                "tags": [
                    {
                        "name": "param",
                        "content": "Array with feature toggle objects where each object                               should have a <code>name<\/code>, <code>setting<\/code> and <code>label<\/code> property.",
                        "types": [
                            "array"
                        ],
                        "variable": "$feature_toggles"
                    }
                ]
            }
        }
    },
    "admin\/views\/class-yoast-integration-toggles.php": {
        "wpseo_integration_toggles": {
            "start": 99,
            "doc": {
                "description": "Filter to add integration toggles from add-ons.",
                "long_description": "",
                "tags": [
                    {
                        "name": "param",
                        "content": "Array with integration toggle objects where each object                                   should have a <code>name<\/code>, <code>setting<\/code> and <code>label<\/code> property.",
                        "types": [
                            "array"
                        ],
                        "variable": "$integration_toggles"
                    }
                ]
            }
        }
    },
    "admin\/views\/tabs\/dashboard\/site-analysis.php": {
        "wpseo_settings_tab_site_analysis": {
            "start": 21,
            "doc": {
                "description": "Fires when displaying the site wide analysis tab.",
                "long_description": "",
                "tags": [
                    {
                        "name": "param",
                        "content": "The yoast form object.",
                        "types": [
                            "\\Yoast_Form"
                        ],
                        "variable": "$yform"
                    }
                ]
            }
        }
    },
    "admin\/views\/tabs\/metas\/paper-content\/general\/knowledge-graph.php": {
        "wpseo_knowledge_graph_setting_msg": {
            "start": 38,
            "doc": {
                "description": "Filter: 'wpseo_knowledge_graph_setting_msg' - Allows adding a message above these settings.",
                "long_description": "",
                "tags": [
                    {
                        "name": "api",
                        "content": "string unsigned Message."
                    }
                ]
            }
        }
    },
    "admin\/views\/tabs\/metas\/paper-content\/post-type-content.php": {
        "wpseo_admin_page_meta_post_types": {
            "start": 73,
            "doc": {
                "description": "Allow adding a custom checkboxes to the admin meta page - Post Types tab.",
                "long_description": "",
                "tags": [
                    {
                        "name": "api",
                        "content": "WPSEO_Admin_Pages  $yform  The WPSEO_Admin_Pages object"
                    },
                    {
                        "name": "api",
                        "content": "String  $name  The post type name"
                    }
                ]
            }
        }
    },
    "admin\/views\/tabs\/metas\/paper-content\/taxonomy-content.php": {
        "wpseo_admin_page_meta_taxonomies": {
            "start": 64,
            "doc": {
                "description": "Allow adding custom checkboxes to the admin meta page - Taxonomies tab.",
                "long_description": "",
                "tags": [
                    {
                        "name": "api",
                        "content": "WPSEO_Admin_Pages  $yform  The WPSEO_Admin_Pages object"
                    },
                    {
                        "name": "api",
                        "content": "Object             $tax    The taxonomy"
                    }
                ]
            }
        }
    },
    "admin\/views\/tabs\/social\/accounts.php": {
        "wpseo_admin_other_section": {
            "start": 111,
            "doc": {
                "description": "",
                "long_description": "",
                "tags": []
            }
        }
    },
    "admin\/views\/tabs\/social\/facebook.php": {
        "wpseo_admin_opengraph_section": {
            "start": 89,
            "doc": {
                "description": "",
                "long_description": "",
                "tags": []
            }
        }
    },
    "admin\/views\/tabs\/social\/pinterest.php": {
        "wpseo_admin_pinterest_section": {
            "start": 38,
            "doc": {
                "description": "",
                "long_description": "",
                "tags": []
            }
        }
    },
    "admin\/views\/tabs\/social\/twitterbox.php": {
        "wpseo_admin_twitter_section": {
            "start": 34,
            "doc": {
                "description": "",
                "long_description": "",
                "tags": []
            }
        }
    },
    "admin\/views\/tabs\/tool\/import-seo.php": {
        "wpseo_import_other_plugins": {
            "start": 79,
            "doc": {
                "description": "",
                "long_description": "",
                "tags": []
            }
        }
    },
    "admin\/views\/tool-import-export.php": {
        "wpseo_handle_import": {
            "start": 55,
            "doc": {
                "description": "Allow custom import actions.",
                "long_description": "",
                "tags": [
                    {
                        "name": "api",
                        "content": "WPSEO_Import_Status $import Contains info about the handled import."
                    }
                ]
            }
        },
        "wpseo_import_message": {
            "start": 69,
            "doc": {
                "description": "Allow customization of import\/export message.",
                "long_description": "",
                "tags": [
                    {
                        "name": "api",
                        "content": "string  $msg  The message."
                    }
                ]
            }
        },
        "wpseo_import_tab_header": {
            "start": 107,
            "doc": {
                "description": "Allow adding a custom import tab header.",
                "long_description": "",
                "tags": []
            }
        },
        "wpseo_import_tab_content": {
            "start": 122,
            "doc": {
                "description": "Allow adding a custom import tab.",
                "long_description": "",
                "tags": []
            }
        }
    },
    "inc\/class-upgrade.php": {
        "wpseo_run_upgrade": {
            "start": 94,
            "doc": {
                "description": "Filter: 'wpseo_run_upgrade' - Runs the upgrade hook which are dependent on Yoast SEO.",
                "long_description": "",
                "tags": [
                    {
                        "name": "api",
                        "content": "string - The current version of Yoast SEO"
                    }
                ]
            }
        },
        "wpseo_register_roles": {
            "start": 388,
            "doc": {
                "description": "Clean up stray wpseo_ms options from the options table, option should only exist in the sitemeta table.",
                "long_description": "<p>This could have been caused in many version of Yoast SEO, so deleting it for everything below 2.0.<\/p>",
                "tags": []
            }
        },
        "wpseo_register_capabilities": {
            "start": 694,
            "doc": {
                "description": "",
                "long_description": "",
                "tags": []
            }
        }
    },
    "inc\/class-wpseo-admin-bar-menu.php": {
        "wpseo_use_page_analysis": {
            "start": 534,
            "doc": {
                "description": "",
                "long_description": "",
                "tags": []
            }
        }
    },
    "inc\/class-wpseo-content-images.php": {
        "wpseo_pre_analysis_post_content": {
            "start": 103,
            "doc": {
                "description": "Filter: 'wpseo_pre_analysis_post_content' - Allow filtering the content before analysis.",
                "long_description": "",
                "tags": [
                    {
                        "name": "api",
                        "content": "string $post_content The Post content string."
                    }
                ]
            }
        }
    },
    "inc\/class-wpseo-custom-fields.php": {
        "postmeta_form_limit": {
            "start": 43,
            "doc": {
                "description": "Filters the number of custom fields to retrieve for the drop-down in the Custom Fields meta box.",
                "long_description": "",
                "tags": [
                    {
                        "name": "param",
                        "content": "Number of custom fields to retrieve. Default 30.",
                        "types": [
                            "int"
                        ],
                        "variable": "$limit"
                    }
                ]
            }
        }
    },
    "inc\/class-wpseo-image-utils.php": {
        "wpseo_image_get_data": {
            "start": 140,
            "doc": {
                "description": "Filter: 'wpseo_image_get_data' - Filter image data.",
                "long_description": "<p>Elements with keys not listed in the section will be discarded.<\/p>",
                "tags": [
                    {
                        "name": "api",
                        "content": "array {     Array of image data     @type int    id       Image's ID as an attachment.     @type string alt      Image's alt text.     @type string path     Image's path.     @type int    width    Width of image.     @type int    height   Height of image.     @type int    pixels   Number of pixels in the image.     @type string type     Image's MIME type.     @type string size     Image's size.     @type string url      Image's URL.     @type int    filesize The file size in bytes, if already set. }"
                    },
                    {
                        "name": "api",
                        "content": "int  Attachment ID."
                    }
                ]
            }
        },
        "wpseo_image_image_weight_limit": {
            "start": 164,
            "doc": {
                "description": "Filter: 'wpseo_image_image_weight_limit' - Determines what the maximum weight (in bytes) of an image is allowed to be, default is 2 MB.",
                "long_description": "",
                "tags": [
                    {
                        "name": "api",
                        "content": "int - The maximum weight (in bytes) of an image."
                    }
                ]
            }
        },
        "wpseo_image_sizes": {
            "start": 362,
            "doc": {
                "description": "Filter: 'wpseo_image_sizes' - Determines which image sizes we'll loop through to get an appropriate image.",
                "long_description": "",
                "tags": [
                    {
                        "name": "api",
                        "content": "array - The array of image sizes to loop through."
                    }
                ]
            }
        }
    },
    "inc\/class-wpseo-meta.php": {
        "add_extra_wpseo_meta_fields": {
            "start": 285,
            "doc": {
                "description": "Allow add-on plugins to register their meta fields for management by this class.",
                "long_description": "<p>Calls to add_filter() must be made before plugins_loaded prio 14.<\/p>",
                "tags": []
            }
        },
        "wpseo_metabox_entries_{$tab}": {
            "start": 408,
            "doc": {
                "description": "Filter the WPSEO metabox form field definitions for a tab.",
                "long_description": "<p>{tab} can be 'general', 'advanced' or 'social'.<\/p>",
                "tags": [
                    {
                        "name": "param",
                        "content": "Metabox form field definitions.",
                        "types": [
                            "array"
                        ],
                        "variable": "$field_defs"
                    },
                    {
                        "name": "param",
                        "content": "Post type of the post the metabox is for, defaults to 'post'.",
                        "types": [
                            "string"
                        ],
                        "variable": "$post_type"
                    },
                    {
                        "name": "return",
                        "content": "",
                        "types": [
                            "array"
                        ]
                    }
                ]
            }
        },
        "wpseo_sanitize_post_meta_{$meta_key}": {
            "start": 511,
            "doc": {
                "description": "",
                "long_description": "",
                "tags": []
            }
        },
        "delete_post_meta": {
            "start": 885,
            "doc": {
                "description": "",
                "long_description": "",
                "tags": []
            }
        },
        "deleted_post_meta": {
            "start": 896,
            "doc": {
                "description": "",
                "long_description": "",
                "tags": []
            }
        },
        "wpseo_meta_clean_up": {
            "start": 931,
            "doc": {
                "description": "",
                "long_description": "",
                "tags": []
            }
        }
    },
    "inc\/class-wpseo-replace-vars.php": {
        "wpseo_register_extra_replacements": {
            "start": 92,
            "doc": {
                "description": "Action: 'wpseo_register_extra_replacements' - Allows for registration of additional variables to replace.",
                "long_description": "",
                "tags": []
            }
        },
        "wpseo_replacements": {
            "start": 189,
            "doc": {
                "description": "Filter: 'wpseo_replacements' - Allow customization of the replacements before they are applied.",
                "long_description": "",
                "tags": [
                    {
                        "name": "api",
                        "content": "array   $replacements The replacements."
                    },
                    {
                        "name": "param",
                        "content": "The object some of the replacement values might come from,                    could be a post, taxonomy or term.",
                        "types": [
                            "array"
                        ],
                        "variable": "$args"
                    }
                ]
            }
        },
        "wpseo_replacements_final": {
            "start": 209,
            "doc": {
                "description": "Filter: 'wpseo_replacements_final' - Allow overruling of whether or not to remove placeholders which didn't yield a replacement.",
                "long_description": "",
                "tags": [
                    {
                        "name": "example",
                        "content": "'wpseo_replacements_final', '__return_false' );<\/code>"
                    },
                    {
                        "name": "api",
                        "content": "bool $final"
                    }
                ]
            }
        },
        "wpseo_replacements_filter_sep": {
            "start": 451,
            "doc": {
                "description": "Filter: 'wpseo_replacements_filter_sep' - Allow customization of the separator character(s).",
                "long_description": "",
                "tags": [
                    {
                        "name": "api",
                        "content": "string $replacement The current separator."
                    }
                ]
            }
        },
        "wpseo_terms": {
            "start": 1382,
            "doc": {
                "description": "Allows filtering of the terms list used to replace %%category%%, %%tag%% and %%ct_<custom-tax-name>%% variables.",
                "long_description": "",
                "tags": [
                    {
                        "name": "api",
                        "content": "string    $output    Comma-delimited string containing the terms."
                    },
                    {
                        "name": "api",
                        "content": "string    $taxonomy  The taxonomy of the terms."
                    }
                ]
            }
        }
    },
    "inc\/class-wpseo-utils.php": {
        "wpseo_allow_system_file_edit": {
            "start": 69,
            "doc": {
                "description": "Filter: 'wpseo_allow_system_file_edit' - Allow developers to change whether the editing of",
                "long_description": "<p>.htaccess and robots.txt is allowed.<\/p>",
                "tags": [
                    {
                        "name": "api",
                        "content": "bool $allowed Whether file editing is allowed."
                    }
                ]
            }
        },
        "sanitize_text_field": {
            "start": 229,
            "doc": {
                "description": "Filter a sanitized text field string.",
                "long_description": "",
                "tags": [
                    {
                        "name": "since",
                        "content": "WP 2.9.0",
                        "description": "WP 2.9.0"
                    },
                    {
                        "name": "param",
                        "content": "The sanitized string.",
                        "types": [
                            "string"
                        ],
                        "variable": "$filtered"
                    },
                    {
                        "name": "param",
                        "content": "The string prior to being sanitized.",
                        "types": [
                            "string"
                        ],
                        "variable": "$str"
                    }
                ]
            }
        },
        "wpseo_format_admin_url": {
            "start": 691,
            "doc": {
                "description": "",
                "long_description": "",
                "tags": []
            }
        },
        "yoast_seo_development_mode": {
            "start": 796,
            "doc": {
                "description": "Filter the Yoast SEO development mode.",
                "long_description": "",
                "tags": [
                    {
                        "name": "since",
                        "content": "3.0"
                    },
                    {
                        "name": "param",
                        "content": "Is Yoast SEOs development mode active.",
                        "types": [
                            "bool"
                        ],
                        "variable": "$development_mode"
                    }
                ]
            }
        },
        "wpseo_admin_l10n": {
            "start": 1059,
            "doc": {
                "description": "",
                "long_description": "",
                "tags": []
            }
        },
        "wpseo_home_url": {
            "start": 1109,
            "doc": {
                "description": "Action: 'wpseo_home_url' - Allows overriding of the home URL.",
                "long_description": "",
                "tags": []
            }
        },
        "wpseo_debug_json_data": {
            "start": 1151,
            "doc": {
                "description": "Filter the Yoast SEO development mode.",
                "long_description": "",
                "tags": [
                    {
                        "name": "api",
                        "content": "array $data Allows filtering of the JSON data for debug purposes."
                    }
                ]
            }
        },
        "wpseo_enable_feature": {
            "start": 1357,
            "doc": {
                "description": "",
                "long_description": "",
                "tags": []
            }
        },
        "wpseo_replacements_filter_sep": {
            "start": 1431,
            "doc": {
                "description": "Filter: 'wpseo_replacements_filter_sep' - Allow customization of the separator character(s).",
                "long_description": "",
                "tags": [
                    {
                        "name": "api",
                        "content": "string $replacement The current separator."
                    }
                ]
            }
        }
    },
    "inc\/options\/class-wpseo-option-titles.php": {
        "wpseo_double_clean_titles": {
            "start": 159,
            "doc": {
                "description": "",
                "long_description": "",
                "tags": []
            }
        },
        "wpseo_separator_options": {
            "start": 188,
            "doc": {
                "description": "Allow altering the array with separator options.",
                "long_description": "",
                "tags": [
                    {
                        "name": "api",
                        "content": "array $separator_options Array with the separator options."
                    }
                ]
            }
        },
        "wpseo_option_titles_variable_array_key_patterns": {
            "start": 829,
            "doc": {
                "description": "Allow altering the array with variable array key patterns.",
                "long_description": "",
                "tags": [
                    {
                        "name": "api",
                        "content": "array  $patterns  Array with the variable array key patterns."
                    }
                ]
            }
        },
        "wpseo_separator_option_list": {
            "start": 920,
            "doc": {
                "description": "Allows altering the separator options array.",
                "long_description": "",
                "tags": [
                    {
                        "name": "api",
                        "content": "array $separators Array with the separator options."
                    }
                ]
            }
        }
    },
    "inc\/options\/class-wpseo-option-wpseo.php": {
        "wpseo_enable_tracking": {
            "start": 154,
            "doc": {
                "description": "Filter: 'wpseo_enable_tracking' - Enables the data tracking of Yoast SEO Premium.",
                "long_description": "",
                "tags": [
                    {
                        "name": "api",
                        "content": "string $is_enabled The enabled state. Default is false."
                    }
                ]
            }
        },
        "wpseo_option_wpseo_defaults": {
            "start": 167,
            "doc": {
                "description": "Filter the `wpseo` option defaults.",
                "long_description": "",
                "tags": [
                    {
                        "name": "param",
                        "content": "Array the defaults for the <code>wpseo<\/code> option attributes.",
                        "types": [
                            "array"
                        ],
                        "variable": "$defaults"
                    }
                ]
            }
        }
    },
    "inc\/options\/class-wpseo-option.php": {
        "validate_facebook_app_id_api_response_code": {
            "start": 445,
            "doc": {
                "description": "Filter: 'validate_facebook_app_id_api_response_code' - Allows to filter the Faceboook API response code.",
                "long_description": "",
                "tags": [
                    {
                        "name": "api",
                        "content": "int $response_code The Facebook API response header code."
                    }
                ]
            }
        },
        "validate_facebook_app_id_api_response_body": {
            "start": 451,
            "doc": {
                "description": "Filter: 'validate_facebook_app_id_api_response_body' - Allows to filter the Faceboook API response body.",
                "long_description": "",
                "tags": [
                    {
                        "name": "api",
                        "content": "string $response_body The Facebook API JSON response body."
                    }
                ]
            }
        },
        "wpseo_defaults": {
            "start": 514,
            "doc": {
                "description": "",
                "long_description": "",
                "tags": []
            }
        }
    },
    "inc\/options\/class-wpseo-options.php": {
        "wpseo_options": {
            "start": 205,
            "doc": {
                "description": "Filter: wpseo_options - Allow developers to change the option name to include.",
                "long_description": "",
                "tags": [
                    {
                        "name": "api",
                        "content": "array The option names to include in get_all and reset()."
                    }
                ]
            }
        },
        "default_option_{$option}": {
            "start": 338,
            "doc": {
                "description": "",
                "long_description": "",
                "tags": []
            }
        },
        "option_{$option}": {
            "start": 342,
            "doc": {
                "description": "",
                "long_description": "",
                "tags": []
            }
        }
    },
    "inc\/options\/class-wpseo-taxonomy-meta.php": {
        "wpseo_add_extra_taxmeta_term_defaults": {
            "start": 123,
            "doc": {
                "description": "",
                "long_description": "",
                "tags": []
            }
        },
        "wpseo_tax_meta_special_term_id_validation_{$term_id}": {
            "start": 227,
            "doc": {
                "description": "",
                "long_description": "",
                "tags": []
            }
        },
        "wpseo_sanitize_tax_meta_{$key}": {
            "start": 347,
            "doc": {
                "description": "",
                "long_description": "",
                "tags": []
            }
        }
    },
    "inc\/sitemaps\/class-author-sitemap-provider.php": {
        "wpseo_sitemap_entry": {
            "start": 212,
            "doc": {
                "description": "This filter is documented at inc\/sitemaps\/class-post-type-sitemap-provider.php",
                "long_description": "",
                "tags": []
            }
        },
        "wpseo_sitemap_exclude_author": {
            "start": 263,
            "doc": {
                "description": "Filter the authors, included in XML sitemap.",
                "long_description": "",
                "tags": [
                    {
                        "name": "param",
                        "content": "Array of user objects to filter.",
                        "types": [
                            "array"
                        ],
                        "variable": "$users"
                    }
                ]
            }
        }
    },
    "inc\/sitemaps\/class-post-type-sitemap-provider.php": {
        "wpseo_xml_sitemap_include_images": {
            "start": 47,
            "doc": {
                "description": "Filter - Allows excluding images from the XML sitemap.",
                "long_description": "",
                "tags": [
                    {
                        "name": "param",
                        "content": "unsigned True to include, false to exclude.",
                        "types": [
                            "bool"
                        ],
                        "variable": ""
                    }
                ]
            }
        },
        "wpseo_sitemap_entry": {
            "start": 233,
            "doc": {
                "description": "Filter URL entry before it gets added to the sitemap.",
                "long_description": "",
                "tags": [
                    {
                        "name": "param",
                        "content": "Array of URL parts.",
                        "types": [
                            "array"
                        ],
                        "variable": "$url"
                    },
                    {
                        "name": "param",
                        "content": "URL type.",
                        "types": [
                            "string"
                        ],
                        "variable": "$type"
                    },
                    {
                        "name": "param",
                        "content": "Data object for the URL.",
                        "types": [
                            "object"
                        ],
                        "variable": "$post"
                    }
                ]
            }
        },
        "wpseo_sitemap_exclude_post_type": {
            "start": 276,
            "doc": {
                "description": "Filter decision if post type is excluded from the XML sitemap.",
                "long_description": "",
                "tags": [
                    {
                        "name": "param",
                        "content": "Default false.",
                        "types": [
                            "bool"
                        ],
                        "variable": "$exclude"
                    },
                    {
                        "name": "param",
                        "content": "Post type name.",
                        "types": [
                            "string"
                        ],
                        "variable": "$post_type"
                    }
                ]
            }
        },
        "wpseo_exclude_from_sitemap_by_post_ids": {
            "start": 303,
            "doc": {
                "description": "Filter: 'wpseo_exclude_from_sitemap_by_post_ids' - Allow extending and modifying the posts to exclude.",
                "long_description": "",
                "tags": [
                    {
                        "name": "api",
                        "content": "array $posts_to_exclude The posts to exclude."
                    }
                ]
            }
        },
        "wpseo_typecount_join": {
            "start": 335,
            "doc": {
                "description": "Filter JOIN query part for type count of post type.",
                "long_description": "",
                "tags": [
                    {
                        "name": "param",
                        "content": "SQL part, defaults to empty string.",
                        "types": [
                            "string"
                        ],
                        "variable": "$join"
                    },
                    {
                        "name": "param",
                        "content": "Post type name.",
                        "types": [
                            "string"
                        ],
                        "variable": "$post_type"
                    }
                ]
            }
        },
        "wpseo_typecount_where": {
            "start": 343,
            "doc": {
                "description": "Filter WHERE query part for type count of post type.",
                "long_description": "",
                "tags": [
                    {
                        "name": "param",
                        "content": "SQL part, defaults to empty string.",
                        "types": [
                            "string"
                        ],
                        "variable": "$where"
                    },
                    {
                        "name": "param",
                        "content": "Post type name.",
                        "types": [
                            "string"
                        ],
                        "variable": "$post_type"
                    }
                ]
            }
        },
        "wpseo_sitemap_post_type_archive_link": {
            "start": 398,
            "doc": {
                "description": "Filter the URL Yoast SEO uses in the XML sitemap for this post type archive.",
                "long_description": "",
                "tags": [
                    {
                        "name": "param",
                        "content": "The URL of this archive",
                        "types": [
                            "string"
                        ],
                        "variable": "$archive_url"
                    },
                    {
                        "name": "param",
                        "content": "The post type this archive is for.",
                        "types": [
                            "string"
                        ],
                        "variable": "$post_type"
                    }
                ]
            }
        },
        "wpseo_sitemap_page_for_post_type_archive": {
            "start": 478,
            "doc": {
                "description": "Filter the page which is dedicated to this post type archive.",
                "long_description": "",
                "tags": [
                    {
                        "name": "since",
                        "content": "9.3"
                    },
                    {
                        "name": "param",
                        "content": "The post_id of the page.",
                        "types": [
                            "string"
                        ],
                        "variable": "$archive_page_id"
                    },
                    {
                        "name": "param",
                        "content": "The post type this archive is for.",
                        "types": [
                            "string"
                        ],
                        "variable": "$post_type"
                    }
                ]
            }
        },
        "wpseo_posts_join": {
            "start": 511,
            "doc": {
                "description": "Filter JOIN query part for the post type.",
                "long_description": "",
                "tags": [
                    {
                        "name": "param",
                        "content": "SQL part, defaults to false.",
                        "types": [
                            "string"
                        ],
                        "variable": "$join"
                    },
                    {
                        "name": "param",
                        "content": "Post type name.",
                        "types": [
                            "string"
                        ],
                        "variable": "$post_type"
                    }
                ]
            }
        },
        "wpseo_posts_where": {
            "start": 519,
            "doc": {
                "description": "Filter WHERE query part for the post type.",
                "long_description": "",
                "tags": [
                    {
                        "name": "param",
                        "content": "SQL part, defaults to false.",
                        "types": [
                            "string"
                        ],
                        "variable": "$where"
                    },
                    {
                        "name": "param",
                        "content": "Post type name.",
                        "types": [
                            "string"
                        ],
                        "variable": "$post_type"
                    }
                ]
            }
        },
        "wpseo_xml_sitemap_post_url": {
            "start": 615,
            "doc": {
                "description": "Filter the URL Yoast SEO uses in the XML sitemap.",
                "long_description": "<p>Note that only absolute local URLs are allowed as the check after this removes external URLs.<\/p>",
                "tags": [
                    {
                        "name": "param",
                        "content": "URL to use in the XML sitemap",
                        "types": [
                            "string"
                        ],
                        "variable": "$url"
                    },
                    {
                        "name": "param",
                        "content": "Post object for the URL.",
                        "types": [
                            "object"
                        ],
                        "variable": "$post"
                    }
                ]
            }
        }
    },
    "inc\/sitemaps\/class-sitemap-image-parser.php": {
        "wpseo_sitemap_content_before_parse_html_images": {
            "start": 98,
            "doc": {
                "description": "Filter: 'wpseo_sitemap_content_before_parse_html_images' - Filters the post content before it is parsed for images.",
                "long_description": "",
                "tags": [
                    {
                        "name": "param",
                        "content": "The raw\/unprocessed post content.",
                        "types": [
                            "string"
                        ],
                        "variable": "$content"
                    }
                ]
            }
        },
        "wpseo_sitemap_urlimages": {
            "start": 135,
            "doc": {
                "description": "Filter images to be included for the post in XML sitemap.",
                "long_description": "",
                "tags": [
                    {
                        "name": "param",
                        "content": "Array of image items.",
                        "types": [
                            "array"
                        ],
                        "variable": "$images"
                    },
                    {
                        "name": "param",
                        "content": "ID of the post.",
                        "types": [
                            "int"
                        ],
                        "variable": "$post_id"
                    }
                ]
            }
        },
        "wpseo_xml_sitemap_img_src": {
            "start": 316,
            "doc": {
                "description": "Filter image URL to be included in XML sitemap for the post.",
                "long_description": "",
                "tags": [
                    {
                        "name": "param",
                        "content": "Image URL.",
                        "types": [
                            "string"
                        ],
                        "variable": "$src"
                    },
                    {
                        "name": "param",
                        "content": "Post object.",
                        "types": [
                            "object"
                        ],
                        "variable": "$post"
                    }
                ]
            }
        },
        "wpseo_xml_sitemap_img": {
            "start": 339,
            "doc": {
                "description": "Filter image data to be included in XML sitemap for the post.",
                "long_description": "",
                "tags": [
                    {
                        "name": "param",
                        "content": "{                      Array of image data.",
                        "types": [
                            "array"
                        ],
                        "variable": "$image"
                    },
                    {
                        "name": "type",
                        "content": "string  $src   Image URL."
                    },
                    {
                        "name": "type",
                        "content": "string  $title Image title attribute (optional)."
                    },
                    {
                        "name": "type",
                        "content": "string  $alt   Image alt attribute (optional). }"
                    },
                    {
                        "name": "param",
                        "content": "Post object.",
                        "types": [
                            "object"
                        ],
                        "variable": "$post"
                    }
                ]
            }
        },
        "wp_get_attachment_url": {
            "start": 379,
            "doc": {
                "description": "",
                "long_description": "",
                "tags": []
            }
        }
    },
    "inc\/sitemaps\/class-sitemaps-admin.php": {
        "wpseo_allow_xml_sitemap_ping": {
            "start": 74,
            "doc": {
                "description": "Filter: 'wpseo_allow_xml_sitemap_ping' - Check if pinging is not allowed (allowed by default).",
                "long_description": "",
                "tags": [
                    {
                        "name": "api",
                        "content": "boolean $allow_ping The boolean that is set to true by default."
                    }
                ]
            }
        },
        "wpseo_hit_sitemap_index": {
            "start": 134,
            "doc": {
                "description": "",
                "long_description": "",
                "tags": []
            }
        }
    },
    "inc\/sitemaps\/class-sitemaps-cache.php": {
        "wpseo_enable_xml_sitemap_transient_caching": {
            "start": 86,
            "doc": {
                "description": "Filter if XML sitemap transient cache is enabled.",
                "long_description": "",
                "tags": [
                    {
                        "name": "param",
                        "content": "Enable cache or not, defaults to true.",
                        "types": [
                            "bool"
                        ],
                        "variable": "$unsigned"
                    }
                ]
            }
        }
    },
    "inc\/sitemaps\/class-sitemaps-renderer.php": {
        "wpseo_sitemap_index": {
            "start": 89,
            "doc": {
                "description": "Filter to append sitemaps to the index.",
                "long_description": "",
                "tags": [
                    {
                        "name": "param",
                        "content": "String to append to sitemaps index, defaults to empty.",
                        "types": [
                            "string"
                        ],
                        "variable": "$index"
                    }
                ]
            }
        },
        "wpseo_sitemap_{$type}_urlset": {
            "start": 116,
            "doc": {
                "description": "Filters the `urlset` for a sitemap by type.",
                "long_description": "",
                "tags": [
                    {
                        "name": "api",
                        "content": "string $urlset The output for the sitemap's <code>urlset<\/code>."
                    }
                ]
            }
        },
        "wpseo_sitemap_{$type}_content": {
            "start": 130,
            "doc": {
                "description": "Filter to add extra URLs to the XML sitemap by type.",
                "long_description": "<p>Only runs for the first page, not on all.<\/p>",
                "tags": [
                    {
                        "name": "param",
                        "content": "String content to add, defaults to empty.",
                        "types": [
                            "string"
                        ],
                        "variable": "$content"
                    }
                ]
            }
        },
        "wpseo_stylesheet_url": {
            "start": 156,
            "doc": {
                "description": "Filter the stylesheet URL for the XML sitemap.",
                "long_description": "",
                "tags": [
                    {
                        "name": "param",
                        "content": "Stylesheet URL.",
                        "types": [
                            "string"
                        ],
                        "variable": "$stylesheet"
                    }
                ]
            }
        },
        "wpseo_sitemap_url": {
            "start": 283,
            "doc": {
                "description": "Filters the output for the sitemap URL tag.",
                "long_description": "",
                "tags": [
                    {
                        "name": "api",
                        "content": "string $output The output for the sitemap url tag."
                    },
                    {
                        "name": "param",
                        "content": "The sitemap URL array on which the output is based.",
                        "types": [
                            "array"
                        ],
                        "variable": "$url"
                    }
                ]
            }
        }
    },
    "inc\/sitemaps\/class-sitemaps-router.php": {
        "wpseo_sitemaps_base_url": {
            "start": 119,
            "doc": {
                "description": "Filter the base URL of the sitemaps.",
                "long_description": "",
                "tags": [
                    {
                        "name": "param",
                        "content": "The string that should be added to home_url() to make the full base URL.",
                        "types": [
                            "string"
                        ],
                        "variable": "$base"
                    }
                ]
            }
        }
    },
    "inc\/sitemaps\/class-sitemaps.php": {
        "wpseo_sitemaps_providers": {
            "start": 135,
            "doc": {
                "description": "",
                "long_description": "",
                "tags": []
            }
        },
        "wpseo_sitemap_stylesheet_cache_{$type}": {
            "start": 299,
            "doc": {
                "description": "Fires before the attempt to retrieve XML sitemap from the transient cache.",
                "long_description": "",
                "tags": [
                    {
                        "name": "param",
                        "content": "Sitemaps object.",
                        "types": [
                            "\\WPSEO_Sitemaps"
                        ],
                        "variable": "$sitemaps"
                    }
                ]
            }
        },
        "wpseo_build_sitemap_post_type": {
            "start": 346,
            "doc": {
                "description": "Filter the type of sitemap to build.",
                "long_description": "",
                "tags": [
                    {
                        "name": "param",
                        "content": "Sitemap type, determined by the request.",
                        "types": [
                            "string"
                        ],
                        "variable": "$type"
                    }
                ]
            }
        },
        "wpseo_do_sitemap_{$type}": {
            "start": 378,
            "doc": {
                "description": "Fires custom handler, if hooked to generate sitemap for the type.",
                "long_description": "",
                "tags": []
            }
        },
        "wpseo_sitemap_index_links": {
            "start": 403,
            "doc": {
                "description": "Filter the sitemap links array before the index sitemap is built.",
                "long_description": "",
                "tags": [
                    {
                        "name": "param",
                        "content": "Array of sitemap links",
                        "types": [
                            "array"
                        ],
                        "variable": "$links"
                    }
                ]
            }
        },
        "wpseo_xsl_{$type}": {
            "start": 429,
            "doc": {
                "description": "Fires for the output of XSL for XML sitemaps, other than type \"main\".",
                "long_description": "",
                "tags": []
            }
        },
        "wpseo_allow_xml_sitemap_ping": {
            "start": 556,
            "doc": {
                "description": "Filter: 'wpseo_allow_xml_sitemap_ping' - Check if pinging is not allowed (allowed by default)",
                "long_description": "",
                "tags": [
                    {
                        "name": "api",
                        "content": "boolean $allow_ping The boolean that is set to true by default."
                    }
                ]
            }
        },
        "wpseo_sitemap_entries_per_page": {
            "start": 587,
            "doc": {
                "description": "Filter the maximum number of entries per XML sitemap.",
                "long_description": "<p>After changing the output of the filter, make sure that you disable and enable the sitemaps to make sure the value is picked up for the sitemap cache.<\/p>",
                "tags": [
                    {
                        "name": "param",
                        "content": "The maximum number of entries per XML sitemap.",
                        "types": [
                            "int"
                        ],
                        "variable": "$entries"
                    }
                ]
            }
        },
        "wpseo_sitemap_post_statuses": {
            "start": 608,
            "doc": {
                "description": "Filter post status list for sitemap query for the post type.",
                "long_description": "",
                "tags": [
                    {
                        "name": "param",
                        "content": "Post status list, defaults to array( 'publish' ).",
                        "types": [
                            "array"
                        ],
                        "variable": "$post_statuses"
                    },
                    {
                        "name": "param",
                        "content": "Post type or SITEMAP_INDEX_TYPE.",
                        "types": [
                            "string"
                        ],
                        "variable": "$type"
                    }
                ]
            }
        },
        "wpseo_sitemap_http_headers": {
            "start": 643,
            "doc": {
                "description": "Filter the HTTP headers we send before an XML sitemap.",
                "long_description": "",
                "tags": [
                    {
                        "name": "param",
                        "content": "The HTTP headers we're going to send out.",
                        "types": [
                            "array"
                        ],
                        "variable": "$headers"
                    }
                ]
            }
        }
    },
    "inc\/sitemaps\/class-taxonomy-sitemap-provider.php": {
        "wpseo_xml_sitemap_include_images": {
            "start": 36,
            "doc": {
                "description": "Filter - Allows excluding images from the XML sitemap.",
                "long_description": "",
                "tags": [
                    {
                        "name": "param",
                        "content": "unsigned True to include, false to exclude.",
                        "types": [
                            "bool"
                        ],
                        "variable": ""
                    }
                ]
            }
        },
        "wpseo_sitemap_exclude_empty_terms": {
            "start": 193,
            "doc": {
                "description": "This filter is documented in inc\/sitemaps\/class-taxonomy-sitemap-provider.php",
                "long_description": "",
                "tags": []
            }
        },
        "wpseo_sitemap_exclude_empty_terms_taxonomy": {
            "start": 195,
            "doc": {
                "description": "This filter is documented in inc\/sitemaps\/class-taxonomy-sitemap-provider.php",
                "long_description": "",
                "tags": []
            }
        },
        "wpseo_exclude_from_sitemap_by_term_ids": {
            "start": 229,
            "doc": {
                "description": "Filter: 'wpseo_exclude_from_sitemap_by_term_ids' - Allow excluding terms by ID.",
                "long_description": "",
                "tags": [
                    {
                        "name": "api",
                        "content": "array $terms_to_exclude The terms to exclude."
                    }
                ]
            }
        },
        "wpseo_sitemap_entry": {
            "start": 262,
            "doc": {
                "description": "This filter is documented at inc\/sitemaps\/class-post-type-sitemap-provider.php",
                "long_description": "",
                "tags": []
            }
        },
        "wpseo_sitemap_exclude_taxonomy": {
            "start": 299,
            "doc": {
                "description": "Filter to exclude the taxonomy from the XML sitemap.",
                "long_description": "",
                "tags": [
                    {
                        "name": "param",
                        "content": "Defaults to false.",
                        "types": [
                            "boolean"
                        ],
                        "variable": "$exclude"
                    },
                    {
                        "name": "param",
                        "content": "Name of the taxonomy to exclude..",
                        "types": [
                            "string"
                        ],
                        "variable": "$taxonomy_name"
                    }
                ]
            }
        }
    },
    "inc\/wpseo-functions.php": {
        "wpseo_register_capabilities": {
            "start": 249,
            "doc": {
                "description": "",
                "long_description": "",
                "tags": []
            }
        }
    },
    "src\/deprecated\/class-metabox-addon-section.php": {
        "wpseo_tab_header": {
            "start": 45,
            "doc": {
                "description": "",
                "long_description": "",
                "tags": []
            }
        },
        "wpseo_tab_content": {
            "start": 50,
            "doc": {
                "description": "",
                "long_description": "",
                "tags": []
            }
        }
    },
    "src\/deprecated\/frontend\/class-opengraph.php": {
        "wpseo_og_{$og_property}": {
            "start": 58,
            "doc": {
                "description": "Filter: 'wpseo_og_' . $og_property - Allow developers to change the content of specific OG meta tags.",
                "long_description": "",
                "tags": [
                    {
                        "name": "deprecated",
                        "content": "14.0"
                    },
                    {
                        "name": "api",
                        "content": "string $content The content of the property."
                    }
                ]
            }
        }
    },
    "src\/helpers\/post-type-helper.php": {
        "wpseo_accessible_post_types": {
            "start": 72,
            "doc": {
                "description": "Filter: 'wpseo_accessible_post_types' - Allow changing the accessible post types.",
                "long_description": "",
                "tags": [
                    {
                        "name": "api",
                        "content": "array $post_types The public post types."
                    }
                ]
            }
        }
    },
    "src\/integrations\/admin\/link-count-columns-integration.php": {
        "wpseo_link_count_post_types": {
            "start": 111,
            "doc": {
                "description": "",
                "long_description": "",
                "tags": []
            }
        }
    },
    "wp-seo-main.php": {
        "wpseo_register_roles": {
            "start": 226,
            "doc": {
                "description": "",
                "long_description": "",
                "tags": []
            }
        },
        "wpseo_register_capabilities": {
            "start": 227,
            "doc": {
                "description": "",
                "long_description": "",
                "tags": []
            }
        },
        "wpseo_activate": {
            "start": 210,
            "doc": {
                "description": "",
                "long_description": "",
                "tags": []
            }
        },
        "wpseo_deactivate": {
            "start": 236,
            "doc": {
                "description": "",
                "long_description": "",
                "tags": []
            }
        }
    }
}